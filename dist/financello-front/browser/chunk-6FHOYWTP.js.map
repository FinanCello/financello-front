{
  "version": 3,
  "sources": ["src/app/features/auth/login/login.component.ts", "src/app/features/auth/login/login.component.html"],
  "sourcesContent": ["import { Component, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators, FormsModule } from '@angular/forms';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { AuthService } from '../../../services/Auth.service';\r\nimport { LoginRequest } from '../../../models/User';\r\nimport { SnackbarService } from '../../../shared/snackbar/snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, FormsModule],\r\n  templateUrl: './login.component.html',\r\n  styleUrl: './login.component.css'\r\n})\r\nexport class LoginComponent {\r\n  loginForm: FormGroup;\r\n  isLoading = false;\r\n  errorMessage = '';\r\n\r\n  private snackbarService = inject(SnackbarService);\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.loginForm.markAllAsTouched();\r\n    if (this.loginForm.invalid) {\r\n      this.snackbarService.showSnackbar(\r\n        'Data are Missing',\r\n        'Complete all the required fields',\r\n        'icons/warning.png'\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    this.errorMessage = '';\r\n\r\n    const loginRequest: LoginRequest = this.loginForm.value;\r\n\r\n    this.authService.login(loginRequest).subscribe({\r\n      next: (response) => {\r\n        console.log('Login response:', response);\r\n        localStorage.setItem('token', response.token);\r\n        localStorage.setItem('user', JSON.stringify({\r\n          id: response.id,\r\n          email: response.email,\r\n          firstName: response.firstName,\r\n          lastName: response.lastName,\r\n          userType: response.userType\r\n        }));\r\n\r\n        this.snackbarService.showSnackbar(\r\n          'Successful Record',\r\n          'The user was created correctly',\r\n          'icons/success.png'\r\n        );\r\n\r\n        this.router.navigate(['/dashboard']);\r\n      },\r\n      error: (error) => {\r\n        this.isLoading = false;\r\n        const backendMsg = error.error?.detail || 'Access Denied';\r\n\r\n        if (backendMsg.includes('Incorrect password')) {\r\n          this.snackbarService.showSnackbar(\r\n            'Access Denied',\r\n            'Incorrect password',\r\n            'icons/error.png'\r\n          );\r\n        } else if (backendMsg.includes('User not found')) {\r\n          this.snackbarService.showSnackbar(\r\n            'Access Denied',\r\n            'User does not exist',\r\n            'icons/error.png'\r\n          );\r\n        } else {\r\n          this.snackbarService.showSnackbar(\r\n            'Access Denied',\r\n            backendMsg,\r\n            'icons/error.png'\r\n          );\r\n        }\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  goToSignup() {\r\n    this.router.navigate(['/auth/register']);\r\n  }\r\n}\r\n", "<div class=\"login\">\r\n  <div class=\"content\">\r\n    <div class=\"login-glass\">\r\n      <div class=\"rectangle-27\"></div>\r\n      <div class=\"rectangle-26\"></div>\r\n      <div class=\"login2\">\r\n        <div class=\"login3\">Login</div>\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"form\">\r\n          <div class=\"form-group\">\r\n            <img class=\"icons\" src=\"/assets/icons/mail.svg\" />\r\n            <div class=\"input-wrapper\">\r\n              <input type=\"email\" id=\"email\" formControlName=\"email\" required placeholder=\" \" />\r\n              <label for=\"email\">E-mail</label>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <img class=\"icons2\" src=\"/assets/icons/lock.svg\" />\r\n            <div class=\"input-wrapper\">\r\n              <input type=\"password\" id=\"password\" formControlName=\"password\" required placeholder=\" \" />\r\n              <label for=\"password\">Password</label>\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" class=\"button\">\r\n            <span class=\"text\">Login</span>\r\n          </button>\r\n        </form>\r\n        <div class=\"group-210\">\r\n          <a class=\"create-an-account\" (click)=\"goToSignup()\">Create an account</a>\r\n          <a class=\"forgot-password\">Forgot password?</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <img class=\"finacello-jpg\" src=\"/assets/img/financello.png\" />\r\n  </div>\r\n</div>"],
  "mappings": "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",
  "names": []
}
